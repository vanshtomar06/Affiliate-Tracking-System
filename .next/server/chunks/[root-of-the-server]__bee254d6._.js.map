{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///D:/Desktop/Almmo/src/lib/db.ts"],"sourcesContent":["import type { Affiliate, Campaign, Click, Conversion } from './types';\n\n// In-memory store to simulate a database\nlet affiliates: Affiliate[] = [\n  { id: 1, name: 'Super Affiliates Inc.' },\n  { id: 2, name: 'Marketing Gurus' },\n  { id: 3, name: 'Top Converters' },\n];\n\nlet campaigns: Campaign[] = [\n  { id: 10, name: 'Summer Sale 2024' },\n  { id: 20, name: 'Winter Deals' },\n  { id: 30, name: 'Black Friday Special' },\n];\n\nlet clicks: Click[] = [];\nlet conversions: Conversion[] = [];\n\nlet nextClickId = 1;\nlet nextConversionId = 1;\n\n// Seed some initial data for demonstration if the stores are empty\nconst seedData = () => {\n  if (clicks.length === 0) {\n    const now = Date.now();\n    clicks.push({ id: nextClickId++, affiliate_id: 1, campaign_id: 10, click_id: 'abc123', timestamp: new Date(now - 2 * 24 * 60 * 60 * 1000) });\n    clicks.push({ id: nextClickId++, affiliate_id: 1, campaign_id: 10, click_id: 'def456', timestamp: new Date(now - 1 * 24 * 60 * 60 * 1000) });\n    clicks.push({ id: nextClickId++, affiliate_id: 2, campaign_id: 20, click_id: 'ghi789', timestamp: new Date(now - 12 * 60 * 60 * 1000) });\n    clicks.push({ id: nextClickId++, affiliate_id: 1, campaign_id: 20, click_id: 'jkl012', timestamp: new Date(now - 6 * 60 * 60 * 1000) });\n    clicks.push({ id: nextClickId++, affiliate_id: 3, campaign_id: 30, click_id: 'mno345', timestamp: new Date(now - 2 * 60 * 60 * 1000) });\n  }\n\n  if (conversions.length === 0) {\n    const now = Date.now();\n    conversions.push({ id: nextConversionId++, click_id: 1, amount: 100, currency: 'USD', timestamp: new Date(now - 47 * 60 * 60 * 1000) });\n    conversions.push({ id: nextConversionId++, click_id: 3, amount: 75.50, currency: 'EUR', timestamp: new Date(now - 10 * 60 * 60 * 1000) });\n    conversions.push({ id: nextConversionId++, click_id: 4, amount: 120.00, currency: 'USD', timestamp: new Date(now - 4 * 60 * 60 * 1000) });\n  }\n};\n\nseedData();\n\n// --- API Functions ---\n\nexport async function getAffiliates(): Promise<Affiliate[]> {\n  return Promise.resolve(affiliates);\n}\n\nexport async function getCampaigns(): Promise<Campaign[]> {\n  return Promise.resolve(campaigns);\n}\n\nexport async function getClicksForAffiliate(affiliateId: number): Promise<Click[]> {\n  const affiliateClicks = clicks.filter(c => c.affiliate_id === affiliateId);\n  return Promise.resolve(affiliateClicks);\n}\n\nexport async function getConversionsForAffiliate(affiliateId: number): Promise<(Conversion & { click: Click | undefined })[]> {\n  const affiliateClicks = clicks.filter(c => c.affiliate_id === affiliateId);\n  const affiliateClickIds = affiliateClicks.map(c => c.id);\n  const affiliateConversions = conversions\n    .filter(conv => affiliateClickIds.includes(conv.click_id))\n    .map(conv => ({\n      ...conv,\n      click: clicks.find(c => c.id === conv.click_id)\n    }));\n  return Promise.resolve(affiliateConversions);\n}\n\nexport async function addClick(data: { affiliate_id: number; campaign_id: number; click_id: string }): Promise<Click> {\n  const newClick: Click = {\n    ...data,\n    id: nextClickId++,\n    timestamp: new Date(),\n  };\n  clicks.push(newClick);\n  return Promise.resolve(newClick);\n}\n\nexport async function findClick(click_id: string, affiliate_id: number): Promise<Click | undefined> {\n  const foundClick = clicks.find(c => c.click_id === click_id && c.affiliate_id === affiliate_id);\n  return Promise.resolve(foundClick);\n}\n\nexport async function addConversion(data: { click_id: number; amount: number; currency: string }): Promise<Conversion> {\n  // Check if conversion for this click already exists\n  const existingConversion = conversions.find(c => c.click_id === data.click_id);\n  if (existingConversion) {\n    throw new Error(\"Conversion for this click already exists.\");\n  }\n  \n  const newConversion: Conversion = {\n    ...data,\n    id: nextConversionId++,\n    timestamp: new Date(),\n  };\n  conversions.push(newConversion);\n  return Promise.resolve(newConversion);\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///D:/Desktop/Almmo/src/app/api/clicks/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { getClicksForAffiliate } from '@/lib/db';\n\nexport async function GET(request: Request) {\n  const { searchParams } = new URL(request.url);\n  const affiliate_id = searchParams.get('affiliate_id');\n\n  if (!affiliate_id) {\n    return NextResponse.json({ status: 'error', message: 'Missing affiliate_id parameter' }, { status: 400 });\n  }\n\n  try {\n    const clicks = await getClicksForAffiliate(parseInt(affiliate_id, 10));\n    return NextResponse.json({ status: 'success', data: clicks });\n  } catch (error) {\n    const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred';\n    return NextResponse.json({ status: 'error', message: 'Failed to get clicks', error: errorMessage }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,IAAI,OAAgB;IACxC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;IAC5C,MAAM,eAAe,aAAa,GAAG,CAAC;IAEtC,IAAI,CAAC,cAAc;QACjB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,QAAQ;YAAS,SAAS;QAAiC,GAAG;YAAE,QAAQ;QAAI;IACzG;IAEA,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,kHAAA,CAAA,wBAAqB,AAAD,EAAE,SAAS,cAAc;QAClE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,QAAQ;YAAW,MAAM;QAAO;IAC7D,EAAE,OAAO,OAAO;QACd,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAC9D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,QAAQ;YAAS,SAAS;YAAwB,OAAO;QAAa,GAAG;YAAE,QAAQ;QAAI;IACpH;AACF","debugId":null}}]
}